<nodisp>
  <revision_frequency>30</revision_frequency>
</nodisp>

/* More information on what to specify as part of each section, please refer to [[:contribute:do_work:guidelines|Writing Guidelines]] */

---- dataentry practices ----
type            : practice
name            : Refactoring
tag             : Developer
----

===== Practice: Refactoring =====

From [[https://en.wikipedia.org/wiki/Code_refactoring|Wikipedia]]:

Code refactoring is a "disciplined technique for restructuring an existing body of code, altering its internal structure without changing its external behavior", undertaken in order to improve some of the nonfunctional attributes of the software. Advantages include improved code readability and reduced complexity to improve the maintainability of the source code, as well as a more expressive internal architecture or object model to improve extensibility.

  By continuously improving the design of code, we make it easier and easier to
  work with. This is in sharp contrast to what typically happens: little 
  refactoring and a great deal of attention paid to expediently adding new
  features. If you get into the hygienic habit of refactoring continuously, 
  you'll find that it is easier to extend and maintain code.
  Joshua Kerievsky, Refactoring to Patterns 

Typically, refactoring is done by applying a series of standardised basic "micro-refactorings", each of which is a (usually) tiny change in a computer program's source code that either preserves the behaviour of the software or at least does not modify its conformance to functional requirements. Many development environments provide automated support for carrying out the mechanical aspects of these basic refactorings.

==== Problems that are addressed by this practice ====

==== The benefits of applying this IT Best Practice ====

==== The consequences or risks of not applying this IT Best Practice ? ====

==== RASCI  ====

^ RASCI ^ Role ^
| [[:general:glossary:glossary_introduction#rasci - responsible|Responsible]] | [[:role:example|Example]] |
| [[:general:glossary:glossary_introduction#rasci - accountable|Accountable]] | <<TODO>> |
| :::                                                                         | <<TODO>> |
| [[:general:glossary:glossary_introduction#rasci - supportive|Supportive]]   | <<TODO>> |
| :::                                                                         | <<TODO>> |
| [[:general:glossary:glossary_introduction#rasci - consulted|Consulted]]     | <<TODO>> |
| :::                                                                         | <<TODO>> |
| [[:general:glossary:glossary_introduction#rasci - informed|Informed]]       | <<TODO>> |

==== Training and Coaching  ====

[[http://www.sparklingconsulting.com.au
[[http://www.sparklingtraining.com.au

^ Key processes where this role is involved in ^
| [[:process:todo:todo| Todo -> Todo]]  |
| [[:process:todo:todo| Todo -> Todo]]  |
| [[:process:todo:todo| Todo -> Todo]]  |

==== Prerequisite IT Best Practice ====

[[:practice:unit testing|Unit Testing]]

==== Effort ====

==== Tools ====

==== Artifacts ====

==== Do's and Don'ts ====

==== Continue Reading: ====




